{
  "_args": [
    [
      {
        "raw": "wrench@1.3.x",
        "scope": null,
        "escapedName": "wrench",
        "name": "wrench",
        "rawSpec": "1.3.x",
        "spec": ">=1.3.0 <1.4.0",
        "type": "range"
      },
      "F:\\vue\\nodeTest\\node_modules\\build"
    ]
  ],
  "_cnpm_publish_time": 1337182697391,
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "wrench@1.3.x",
  "_hasShrinkwrap": false,
  "_id": "wrench@1.3.9",
  "_location": "/wrench",
  "_nodeVersion": "v0.6.14",
  "_npmUser": {
    "name": "ryanmcgrath",
    "email": "ryan@venodesigns.net"
  },
  "_npmVersion": "1.1.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wrench@1.3.x",
    "scope": null,
    "escapedName": "wrench",
    "name": "wrench",
    "rawSpec": "1.3.x",
    "spec": ">=1.3.0 <1.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/build"
  ],
  "_resolved": "http://registry.npm.taobao.org/wrench/download/wrench-1.3.9.tgz",
  "_shasum": "6f13ec35145317eb292ca5f6531391b244111411",
  "_shrinkwrap": null,
  "_spec": "wrench@1.3.x",
  "_where": "F:\\vue\\nodeTest\\node_modules\\build",
  "author": {
    "name": "Ryan McGrath",
    "email": "ryan@venodesigns.net"
  },
  "bugs": {
    "url": "http://github.com/ryanmcgrath/wrench-js/issues"
  },
  "dependencies": {},
  "deprecated": "wrench.js is deprecated! You should check out fs-extra (https://github.com/jprichardson/node-fs-extra) for any operations you were using wrench for. Thanks for all the usage over the years.",
  "description": "Recursive filesystem (and other) operations that Node *should* have.",
  "devDependencies": {
    "nodeunit": ">= 0.6.4"
  },
  "directories": {
    "lib": "./lib/"
  },
  "dist": {
    "shasum": "6f13ec35145317eb292ca5f6531391b244111411",
    "size": 5809,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/wrench/download/wrench-1.3.9.tgz"
  },
  "engines": {
    "node": ">=0.1.97"
  },
  "homepage": "https://github.com/ryanmcgrath/wrench-js#readme",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/ryanmcgrath/wrench-js/raw/master/LICENSE"
    }
  ],
  "main": "./lib/wrench",
  "maintainers": [
    {
      "name": "ryanmcgrath",
      "email": "ryan@venodesigns.net"
    }
  ],
  "name": "wrench",
  "optionalDependencies": {},
  "publish_time": 1337182697391,
  "readme": "wrench.js - Recursive file operations in Node.js\n----------------------------------------------------------------------------\nWhile I love Node.js, I've found myself missing some functions. Things like\nrecursively deleting/chmodding a directory (or even deep copying a directory),\nor even a basic line reader, shouldn't need to be re-invented time and time again.\n\nThat said, here's my attempt at a re-usable solution, at least until something\nmore formalized gets integrated into Node.js (*hint hint*). wrench.js is fairly simple\nto use - check out the documentation/examples below:\n\nInstallation\n-----------------------------------------------------------------------------\n\n    npm install wrench\n\nUsage\n-----------------------------------------------------------------------------\n``` javascript\nvar wrench = require('wrench'),\n\tutil = require('util');\n```\n\n### Synchronous operations\n``` javascript\n// Recursively create directories, sub-trees and all.\nwrench.mkdirSyncRecursive(dir, 0777);\n\n// Recursively delete the entire sub-tree of a directory, then kill the directory\nwrench.rmdirSyncRecursive('my_directory_name', failSilently);\n\n// Recursively read directories contents.\nwrench.readdirSyncRecursive('my_directory_name');\n\n// Recursively chmod the entire sub-tree of a directory\nwrench.chmodSyncRecursive('my_directory_name', 0755);\n\n// Recursively chown the entire sub-tree of a directory\nwrench.chownSyncRecursive(\"directory\", uid, gid);\n\n// Deep-copy an existing directory\nwrench.copyDirSyncRecursive('directory_to_copy', 'location_where_copy_should_end_up');\n\n// Read lines in from a file until you hit the end\nvar f = new wrench.LineReader('x.txt');\nwhile(f.hasNextLine()) {\n\tutil.puts(x.getNextLine());\n}\n```\n\n### Asynchronous operations\n``` javascript\n// Recursively read directories contents\nvar files = [];\nwrench.readdirRecursive('my_directory_name', function(error, curFiles) {\n    // curFiles is what you want\n});\n\n```\n\nQuestions, comments? Hit me up. (ryan [at] venodesigns.net | http://twitter.com/ryanmcgrath)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://ryanmcgrath@github.com/ryanmcgrath/wrench-js.git"
  },
  "scripts": {
    "test": "nodeunit tests/runner.js"
  },
  "version": "1.3.9"
}
